openapi: 3.1.0
info:
  title: AI Lesson Generator API
  description: API for auto-generating audio/video lessons from text and managing push notifications
  version: 1.0.0
servers:
  - url: http://localhost:8080/
    description: Local server
paths:
  /api/auth/register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: teacher@example.com
                username:
                  type: string
                  example: TeacherName
                password:
                  type: string
                  example: password123
                fullname:
                  type: string
                  example: Teacher Full Name
                role:
                  type: string
                  enum: [Admin, Lecturer]
                  example: Lecturer
              required:
                - email
                - username
                - password
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Đăng ký thành công
        '400':
          description: Email already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Email đã được sử dụng
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lỗi server
  /api/auth/login:
    post:
      summary: Login user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: teacher@example.com
                password:
                  type: string
                  example: password123
              required:
                - email
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  message:
                    type: string
                    example: Đăng nhập thành công
                  role:
                    type: string
                    enum: [Admin, Lecturer]
                    example: Lecturer
        '400':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Tên người dùng hoặc mật khẩu không đúng
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lỗi server
  /api/auth/google:
    post:
      summary: Login or register with Google
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                idToken:
                  type: string
                  example: eyJhbGciOiJSUzI1NiIsImtpZCI6Ij...
              required:
                - idToken
      responses:
        '200':
          description: Google login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  message:
                    type: string
                    example: Đăng nhập Google thành công
                  role:
                    type: string
                    enum: [Admin, Lecturer]
                    example: Lecturer
        '400':
          description: Invalid Google token or unverified email
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Email Google chưa được xác minh
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lỗi xác thực Google
  /api/lessons:
    post:
      summary: Create a new lesson
      tags:
        - Lessons
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Bài giảng Toán học
                text_content:
                  type: string
                  example: Đây là nội dung bài giảng...
                language:
                  type: string
                  example: vi
                file:
                  type: string
                  format: binary
              required:
                - title
      responses:
        '201':
          description: Lesson created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lesson and video created successfully
                  lesson:
                    type: object
                    properties:
                      id:
                        type: string
                      title:
                        type: string
                      text_content:
                        type: string
                      language:
                        type: string
                      createdBy:
                        type: string
                      status:
                        type: object
                        properties:
                          status:
                            type: string
                            enum: [uploaded, processing, failed, completed]
                  segments:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        lesson_id:
                          type: string
                        segment_order:
                          type: number
                        text:
                          type: string
                        duration:
                          type: number
                        start_time:
                          type: number
                  slides:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        segment_id:
                          type: string
                        image_url:
                          type: string
                        display_time:
                          type: number
                        order_index:
                          type: number
                        status:
                          type: string
                  video:
                    type: string
                    example: https://your-domain.com/videos/lesson_id_output.mp4
        '400':
          description: Missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Title and either text_content or file are required
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User not authenticated
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to generate lesson content
    get:
      summary: Get all lessons
      tags:
        - Lessons
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of lessons
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    title:
                      type: string
                    status:
                      type: string
                      enum: [uploaded, processing, failed, completed]
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lỗi server
  /api/lessons/{id}:
    get:
      summary: Get lesson details
      tags:
        - Lessons
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Lesson ID
      responses:
        '200':
          description: Lesson details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  text_content:
                    type: string
                  language:
                    type: string
                  status:
                    type: string
                    enum: [uploaded, processing, failed, completed]
                  createdBy:
                    type: string
        '404':
          description: Lesson not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lesson not found
        '403':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized access
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lỗi server
    patch:
      summary: Update lesson details
      tags:
        - Lessons
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Lesson ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Updated Lesson Title
                text_content:
                  type: string
                  example: Updated lesson content...
                language:
                  type: string
                  example: vi
                status:
                  type: string
                  enum: [uploaded, processing, failed, completed]
      responses:
        '200':
          description: Lesson updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lesson updated successfully
                  lesson:
                    type: object
                    properties:
                      id:
                        type: string
                      title:
                        type: string
                      text_content:
                        type: string
                      language:
                        type: string
                      status:
                        type: string
        '404':
          description: Lesson not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lesson not found
        '403':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized access
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lỗi server
    delete:
      summary: Delete a lesson
      tags:
        - Lessons
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Lesson ID
      responses:
        '200':
          description: Lesson deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lesson deleted successfully
        '404':
          description: Lesson not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lesson not found
        '403':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized access
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lỗi server
  /api/segments:
    get:
      summary: Get all segments for a lesson
      tags:
        - Segments
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: lesson_id
          required: true
          schema:
            type: string
          description: Lesson ID to filter segments
      responses:
        '200':
          description: List of segments
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    lesson_id:
                      type: string
                    segment_order:
                      type: number
                    text:
                      type: string
                    duration:
                      type: number
                    start_time:
                      type: number
        '404':
          description: Lesson not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lesson not found
        '403':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized access
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lỗi server
  /api/slides:
    get:
      summary: Get all slides for a segment
      tags:
        - Slides
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: segment_id
          required: true
          schema:
            type: string
          description: Segment ID to filter slides
      responses:
        '200':
          description: List of slides
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    segment_id:
                      type: string
                    image_url:
                      type: string
                    display_time:
                      type: number
                    order_index:
                      type: number
                    status:
                      type: string
        '404':
          description: Segment not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Segment not found
        '403':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized access
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lỗi server
  /api/slides/{id}:
    get:
      summary: Get slide details
      tags:
        - Slides
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Slide ID
      responses:
        '200':
          description: Slide details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  segment_id:
                    type: string
                  image_url:
                    type: string
                  display_time:
                    type: number
                  order_index:
                    type: number
                  status:
                    type: string
        '404':
          description: Slide not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Slide not found
        '403':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized access
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lỗi server
  /api/videos:
    get:
      summary: Get all videos for a lesson
      tags:
        - Videos
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: lesson_id
          required: true
          schema:
            type: string
          description: Lesson ID to filter videos
      responses:
        '200':
          description: List of videos
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    lesson_id:
                      type: string
                    name:
                      type: string
                    video_url:
                      type: string
                    format:
                      type: string
                    duration:
                      type: number
                    resolution:
                      type: string
                    status:
                      type: string
        '404':
          description: Lesson not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lesson not found
        '403':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized access
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lỗi server
  /api/videos/{id}:
    get:
      summary: Get video details
      tags:
        - Videos
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Video ID
      responses:
        '200':
          description: Video details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  lesson_id:
                    type: string
                  name:
                    type: string
                  video_url:
                    type: string
                  format:
                    type: string
                  duration:
                    type: number
                  resolution:
                    type: string
                  status:
                    type: string
        '404':
          description: Video not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Video not found
        '403':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized access
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lỗi server
  /api/users/me:
    get:
      summary: Get current user profile
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  username:
                    type: string
                  fullname:
                    type: string
                  email:
                    type: string
                  role:
                    type: string
                    enum: [Admin, Lecturer]
                  phone:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Người dùng không tồn tại
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lỗi server
    patch:
      summary: Update current user profile
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullname:
                  type: string
                  example: Updated Full Name
                email:
                  type: string
                  example: updated@example.com
                phone:
                  type: string
                  example: +1234567890
      responses:
        '200':
          description: User profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User profile updated successfully
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      username:
                        type: string
                      fullname:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
                        enum: [Admin, Lecturer]
                      phone:
                        type: string
        '400':
          description: Invalid input or email already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid input
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lỗi server
  /api/users:
    get:
      summary: Get all users (Admin only)
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    username:
                      type: string
                    fullname:
                      type: string
                    email:
                      type: string
                    role:
                      type: string
                      enum: [Admin, Lecturer]
                    phone:
                      type: string
        '403':
          description: Access denied (not Admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied: Admins only
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lỗi server
  /api/users/{id}:
    patch:
      summary: Update a user (Admin only)
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: User ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: updated@example.com
                username:
                  type: string
                  example: UpdatedUsername
                fullname:
                  type: string
                  example: Updated Full Name
                role:
                  type: string
                  enum: [Admin, Lecturer]
                  example: Lecturer
                phone:
                  type: string
                  example: +1234567890
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User updated successfully
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      username:
                        type: string
                      fullname:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
                        enum: [Admin, Lecturer]
                      phone:
                        type: string
        '403':
          description: Access denied (not Admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied: Admins only
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User not found
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lỗi server
    delete:
      summary: Delete a user (Admin only)
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: User ID
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User deleted successfully
        '403':
          description: Access denied (not Admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access denied: Admins only
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User not found
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lỗi server
  /api/push/public-key:
    get:
      summary: Get VAPID public key for push notifications
      tags:
        - Push Notifications
      security:
        - bearerAuth: []
      responses:
        '200':
          description: VAPID public key
          content:
            application/json:
              schema:
                type: object
                properties:
                  publicKey:
                    type: string
                    example: BDk9... (base64-encoded VAPID public key)
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lỗi server
  /api/push/subscribe:
    post:
      summary: Subscribe to push notifications
      tags:
        - Push Notifications
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                endpoint:
                  type: string
                  example: https://fcm.googleapis.com/fcm/send/...
                keys:
                  type: object
                  properties:
                    p256dh:
                      type: string
                      example: BN4... (base64-encoded key)
                    auth:
                      type: string
                      example: k8... (base64-encoded key)
              required:
                - endpoint
                - keys
      responses:
        '201':
          description: Subscription saved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Subscription saved successfully
        '400':
          description: Invalid subscription data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid subscription data
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User not authenticated
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to save subscription
  /api/push/notify:
    post:
      summary: Send a custom push notification
      tags:
        - Push Notifications
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: New Notification
                message:
                  type: string
                  example: This is a custom notification
                role:
                  type: string
                  enum: [Admin, Lecturer]
                  example: Admin
              required:
                - title
                - message
      responses:
        '200':
          description: Notification sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Notification sent
        '400':
          description: Missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Title and message are required
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to send notification
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT